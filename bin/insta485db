#!/bin/bash
# insta485db: Script to manage the insta485 SQLite database

# Stop on errors, undefined variables and failed commands in pipes
set -Eeuo pipefail

# Function to display usage
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

# Sanity check for command line options
if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Function to create database and initialize uploads directory
create_db() {
  # Check if database already exists
  if [ -f "var/insta485.sqlite3" ]; then
    echo "Error: database already exists"
    exit 1
  fi

  # Create uploads directory
  mkdir -p var/uploads

  # Initialize database
  sqlite3 var/insta485.sqlite3 < sql/schema.sql
  sqlite3 var/insta485.sqlite3 < sql/data.sql

  # Copy starter files to uploads directory
  cp sql/uploads/* var/uploads/
}

# Function to destroy database and remove uploads directory
destroy_db() {
  rm -rf var/insta485.sqlite3 var/uploads
}

# Function to dump the database content
dump_db() {
  # Dump comments table
  sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'
  
  # Dump following table
  sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'
  
  # Dump likes table
  sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'

  # Dump posts table
  sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'

  # Dump users table
  sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'
}

# Parse argument. $1 is the first argument.
case $1 in
  "create")
    create_db
    ;;

  "destroy")
    destroy_db
    ;;

  "reset")
    destroy_db
    create_db
    ;;

  "dump")
    dump_db
    ;;
  
  *)
    usage
    exit 1
    ;;
esac
